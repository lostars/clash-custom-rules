port: 7890 # HTTP(S) 代理服务器端口
socks-port: 7891 # SOCKS5 代理端口
mixed-port: 7892 # HTTP(S) 和 SOCKS 代理混合端口
redir-port: 7893 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7894

allow-lan: true # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址
# authentication: # http,socks 入口的验证用户名，密码
  # - "username:password"
skip-auth-prefixes: # 设置跳过验证的 IP 段
  - 127.0.0.1/8
  - ::1/128
lan-allowed-ips: # 允许连接的 IP 地址段，仅作用于 allow-lan 为 true, 默认值为 0.0.0.0/0 和::/0
  - 0.0.0.0/0
  - ::/0
# lan-disallowed-ips: # 禁止连接的 IP 地址段，黑名单优先级高于白名单，默认值为空
  # - 192.168.0.3/32

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

mode: rule

#自定义 geodata url
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"

geo-auto-update: true # 是否自动更新 geodata
geo-update-interval: 24 # 更新间隔，单位：小时

log-level: info # 日志等级 silent/error/warning/info/debug

ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录

external-controller: 0.0.0.0:9090 # RESTful API 监听地址
# external-controller-tls: 0.0.0.0:9443 # RESTful API HTTPS 监听地址，需要配置 tls 部分配置文件
# secret: "123456" # `Authorization:Bearer ${secret}`

tcp-concurrent: true # TCP 并发连接所有 IP, 将使用最快握手的 TCP

# 配置 WEB UI 目录，使用 http://{{external-controller}}/ui 访问
external-ui: metacubexd
external-ui-name: metacubexd
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

#  TCP keep alive interval
# disable-keep-alive: false #目前在android端强制为true
# keep-alive-idle: 15
# keep-alive-interval: 15

# 类似于 /etc/hosts, 仅支持配置单个 IP
hosts:
'router.asus.com': 192.168.50.1
# '.dev': 127.0.0.1
# 'alpha.mihomo.dev': '::1'
# test.com: [1.1.1.1, 2.2.2.2]
# home.lan: lan # lan 为特别字段，将加入本地所有网卡的地址
# baidu.com: google.com # 只允许配置一个别名

profile: # 存储 select 选择记录
  store-selected: true

  # 持久化 fake-ip
  store-fake-ip: true

# Tun 配置
tun:
  enable: false
  stack: system # gvisor/mixed
  dns-hijack:
    - 0.0.0.0:53 # 需要劫持的 DNS
  # auto-detect-interface: true # 自动识别出口网卡
  # auto-route: true # 配置路由表
  # mtu: 9000 # 最大传输单元
  # gso: false # 启用通用分段卸载，仅支持 Linux
  # gso-max-size: 65536 # 通用分段卸载包的最大大小
  auto-redirect: false # 自动配置 iptables 以重定向 TCP 连接。仅支持 Linux。带有 auto-redirect 的 auto-route 现在可以在路由器上按预期工作，无需干预。
  # strict-route: true # 将所有连接路由到 tun 来防止泄漏，但你的设备将无法其他设备被访问
  route-address-set: # 将指定规则集中的目标 IP CIDR 规则添加到防火墙, 不匹配的流量将绕过路由, 仅支持 Linux，且需要 nftables，`auto-route` 和 `auto-redirect` 已启用。
    # - ruleset-1
    # - ruleset-2
  route-exclude-address-set: # 将指定规则集中的目标 IP CIDR 规则添加到防火墙, 匹配的流量将绕过路由, 仅支持 Linux，且需要 nftables，`auto-route` 和 `auto-redirect` 已启用。
    # - ruleset-3
    # - ruleset-4
  route-address: # 启用 auto-route 时使用自定义路由而不是默认路由
    - 0.0.0.0/1
    - 128.0.0.0/1
    - "::/1"
    - "8000::/1"
  # inet4-route-address: # 启用 auto-route 时使用自定义路由而不是默认路由（旧写法）
  #   - 0.0.0.0/1
  #   - 128.0.0.0/1
  # inet6-route-address: # 启用 auto-route 时使用自定义路由而不是默认路由（旧写法）
  #   - "::/1"
  #   - "8000::/1"
  # endpoint-independent-nat: false # 启用独立于端点的 NAT
  # include-interface: # 限制被路由的接口。默认不限制，与 `exclude-interface` 冲突
  #   - "lan0"
  # exclude-interface: # 排除路由的接口，与 `include-interface` 冲突
  #   - "lan1"
  # include-uid: # UID 规则仅在 Linux 下被支持，并且需要 auto-route
  # - 0
  # include-uid-range: # 限制被路由的的用户范围
  # - 1000:9999
  # exclude-uid: # 排除路由的的用户
  #- 1000
  # exclude-uid-range: # 排除路由的的用户范围
  # - 1000:9999

  # Android 用户和应用规则仅在 Android 下被支持
  # 并且需要 auto-route

  # include-android-user: # 限制被路由的 Android 用户
  # - 0
  # - 10
  # include-package: # 限制被路由的 Android 应用包名
  # - com.android.chrome
  # exclude-package: # 排除被路由的 Android 应用包名
  # - com.android.captiveportallogin

# DNS 配置
dns:
  cache-algorithm: arc
  enable: true # 关闭将使用系统 DNS
  prefer-h3: false # 是否开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:53 # 开启 DNS 服务器监听
  ipv6: true # false 将返回 AAAA 的空结果
  # ipv6-timeout: 300 # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  # 用于解析 nameserver，fallback 以及其他 DNS 服务器配置的，DNS 服务域名
  # 只能使用纯 IP 地址，可使用加密 DNS
  # default-nameserver:
  #   - 114.114.114.114
  #   - 8.8.8.8
  #   - tls://1.12.12.12:853
  #   - tls://223.5.5.5:853
  #   - system # append DNS server from system configuration. If not found, it would print an error log and skip.
  enhanced-mode: fake-ip # or redir-host

  fake-ip-range: 198.18.0.1/16 # fake-ip 池设置

  # 配置不使用 fake-ip 的域名
  fake-ip-filter:
    - '*.lan'
    - localhost.ptlogin2.qq.com
    # fakeip-filter 为 rule-providers 中的名为 fakeip-filter 规则订阅，
    # 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
    # - rule-set:fakeip-filter
    # fakeip-filter 为 geosite 中名为 fakeip-filter 的分类（需要自行保证该分类存在）
    # - geosite:fakeip-filter
  # 配置fake-ip-filter的匹配模式，默认为blacklist，即如果匹配成功不返回fake-ip
  # 可设置为whitelist，即只有匹配成功才返回fake-ip
  fake-ip-filter-mode: blacklist

  use-hosts: true # 查询 hosts

  # 配置后面的nameserver、fallback和nameserver-policy向dns服务器的连接过程是否遵守遵守rules规则
  # 如果为false（默认值）则这三部分的dns服务器在未特别指定的情况下会直连
  # 如果为true，将会按照rules的规则匹配链接方式（走代理或直连），如果有特别指定则任然以指定值为准
  # 仅当proxy-server-nameserver非空时可以开启此选项, 强烈不建议和prefer-h3一起使用
  # 此外，这三者配置中的dns服务器如果出现域名会采用default-nameserver配置项解析，也请确保正确配置default-nameserver
  respect-rules: false

  # DNS 主要域名配置
  # 支持 UDP，TCP，DoT，DoH，DoQ
  # 这部分为主要 DNS 配置，影响所有直连，确保使用对大陆解析精准的 DNS
  nameserver:
    - 223.5.5.5
    - 180.76.76.76
    - 119.29.29.29
    - 117.50.11.11
    - 117.50.10.10
    - 114.114.114.114
    - https://dns.alidns.com/dns-query
    - https://doh.360.cn/dns-query
    # - 114.114.114.114 # default value
    # - 8.8.8.8 # default value
    # - tls://223.5.5.5:853 # DNS over TLS
    # - https://doh.pub/dns-query # DNS over HTTPS
    # - https://dns.alidns.com/dns-query#h3=true # 强制 HTTP/3，与 perfer-h3 无关，强制开启 DoH 的 HTTP/3 支持，若不支持将无法使用
    # - https://mozilla.cloudflare-dns.com/dns-query#DNS&h3=true # 指定策略组和使用 HTTP/3
    # - dhcp://en0 # dns from dhcp
    # - quic://dns.adguard.com:784 # DNS over QUIC
    # - '8.8.8.8#RULES' # 效果同respect-rules，但仅对该服务器生效
    # - '8.8.8.8#en0' # 兼容指定 DNS 出口网卡

  # 当配置 fallback 时，会查询 nameserver 中返回的 IP 是否为 CN，非必要配置
  # 当不是 CN，则使用 fallback 中的 DNS 查询结果
  # 确保配置 fallback 时能够正常查询
  fallback:
    - 8.8.8.8
    - 1.1.1.1
    - tls://dns.rubyfish.cn:853
    - tls://1.0.0.1:853
    - tls://dns.google:853
    - https://dns.rubyfish.cn/dns-query
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
  #   - tcp://1.1.1.1
  #   - 'tcp://1.1.1.1#ProxyGroupName' # 指定 DNS 过代理查询，ProxyGroupName 为策略组名或节点名，过代理配置优先于配置出口网卡，当找不到策略组或节点名则设置为出口网卡

  # 专用于节点域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  # proxy-server-nameserver:
  #   - https://dns.google/dns-query
  #   - tls://one.one.one.one

  # 专用于direct出口域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  # direct-nameserver:
  #   - system://
  # direct-nameserver-follow-policy: false # 是否遵循nameserver-policy，默认为不遵守，仅当direct-nameserver不为空时生效

  # 配置 fallback 使用条件
  fallback-filter:
    geoip: true # 配置是否使用 geoip
  #   geoip-code: CN # 当 nameserver 域名的 IP 查询 geoip 库为 CN 时，不使用 fallback 中的 DNS 查询结果
  #   配置强制 fallback，优先于 IP 判断，具体分类自行查看 geosite 库
  #   geosite:
  #     - gfw
  #   如果不匹配 ipcidr 则使用 nameservers 中的结果
    ipcidr:
      - 240.0.0.0/4
  #   domain:
  #     - '+.google.com'
  #     - '+.facebook.com'
  #     - '+.youtube.com'

  # 配置查询域名使用的 DNS 服务器
  nameserver-policy:
    #   'www.baidu.com': '114.114.114.114'
    #   '+.internal.crop.com': '10.0.0.1'
    "geosite:cn,private,apple":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
    "geosite:category-ads-all": rcode://success
    "www.baidu.com,+.google.cn": [223.5.5.5, https://dns.alidns.com/dns-query]
    ## global，dns 为 rule-providers 中的名为 global 和 dns 规则订阅，
    ## 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
    # "rule-set:global,dns": 8.8.8.8

# 订阅，多订阅在这里添加
sub: &sub
  use:
    - cordcloud

latency: &latency
  interval: 300
  tolerance: 50
  url: http://www.gstatic.com/generate_204
  <<: *sub

proxies:

proxy-groups:
  - name: 🚀 节点选择
    type: select
    proxies:
      - ♻️ 低倍率香港
      - ♻️ 自动选择低倍率
      - ♻️ 自动选择
      - 🚀 手动切换
      - 🔯 故障转移
      - 🔮 负载均衡
      - 🇭🇰 香港节点
      - 🇨🇳 台湾节点
      - 🇸🇬 狮城节点
      - 🇯🇵 日本节点
      - 🇺🇲 美国节点
      - 🇸🇩 德国节点
      - 🇫🇷 法国节点
      - 😒 其他节点
      - DIRECT

  - { name: 🚀 手动切换, type: select, proxies: [DIRECT], <<: *sub }
  - { name: 💀 所有节点, type: select, proxies: [DIRECT], <<: *sub}

  # 可配置支持bt/pt的订阅
  - { name: 🧲 BT&PT, type: select, proxies: [DIRECT] }

  - { name: 🎥 奈飞视频, type: select, proxies: [🎥 奈飞节点] }
  - { name: 🌍 国外媒体, type: select, proxies: [🚀 节点选择, 💀 所有节点, DIRECT] }
  - { name: 💬 OpenAi, type: select, proxies: [🇺🇲 美国节点, 🚀 节点选择, 💀 所有节点] }

  # 默认直连
  - { name: 🌏 国内媒体, type: select, proxies: [DIRECT, 🚀 节点选择, 💀 所有节点] }
  - { name: 📢 谷歌FCM, type: select, proxies: [DIRECT, 🚀 节点选择, 💀 所有节点] }
  - { name: Ⓜ️ 微软服务, type: select, proxies: [DIRECT, 🚀 节点选择, 💀 所有节点] }
  - { name: 🍎 苹果服务, type: select, proxies: [DIRECT, 🚀 节点选择, 💀 所有节点] }
  - { name: 🎯 全球直连, type: select, proxies: [DIRECT, 🚀 节点选择, 💀 所有节点] }

  - { name: 🐟 漏网之鱼, type: select, proxies: [🚀 节点选择, 💀 所有节点, DIRECT] }

  - { name: 🛑 广告拦截, type: select, proxies: [REJECT, DIRECT] }
  - { name: 🍃 应用净化, type: select, proxies: [REJECT, DIRECT] }
  - { name: 🆎 AdBlock, type: select, proxies: [REJECT, DIRECT] }
  - { name: 🛡️ 隐私防护, type: select, proxies: [REJECT, DIRECT] }

  - { name: ♻️ 自动选择, <<: *latency, type: url-test }
  - { name: ♻️ 自动选择低倍率, <<: *latency, type: url-test, filter: "\\[倍率:1\\]|\\[倍率:0.[1-9]\\]" }
  - { name: ♻️ 低倍率香港, <<: *latency, type: url-test, filter: "(HK|香港|港).*(\\[倍率:1\\]|\\[倍率:0.[1-9]\\])" }

  - { name: 🔯 故障转移, <<: *latency, type: fallback }
  - { name: 🔮 负载均衡, <<: *latency, type: load-balance, strategy: consistent-hashing }

  - { name: 🇭🇰 香港节点, <<: *latency, type: url-test, filter: "HK|香港|港" }
  - { name: 🇯🇵 日本节点, <<: *latency, type: url-test, filter: "JP|日本" }
  - { name: 🇺🇲 美国节点, <<: *latency, type: url-test, filter: "US|美国" }
  - { name: 🇨🇳 台湾节点, <<: *latency, type: url-test, filter: "TW|台湾" }
  - { name: 🇸🇬 狮城节点, <<: *latency, type: url-test, filter: "SG|新加坡" }
  - { name: 🇸🇩 德国节点, <<: *latency, type: url-test, filter: "DE|德国" }
  - { name: 🇫🇷 法国节点, <<: *latency, type: url-test, filter: "FR|法国" }
  - { name: 🎥 奈飞节点, <<: *latency, type: url-test, filter: "\\[M\\]|AN" }
  - { name: 😒 其他节点, <<: *latency, type: url-test, filter: "(?i)^(?!.*(?:HK|香港|港|JP|日本|US|美国|TW|台湾|SG|新加坡|DE|德国|FR|法国|[M]|AN)).*" }

# Mihomo 格式的节点或支持 *ray 的分享格式
proxy-providers:
  cordcloud:
    type: http # http 的 path 可空置，默认储存路径为 homedir 的 proxies 文件夹，文件名为 url 的 md5
    url: "订阅地址"
    interval: 3600
    path: cordcloud.yaml # 默认只允许存储在 mihomo 的 Home Dir，如果想存储到任意位置，添加环境变量 SKIP_SAFE_PATH_CHECK=1
    proxy: DIRECT
    # size-limit: 10240 # 限制下载文件最大为10kb，默认为0即不限制文件大小
    # header:
      # User-Agent:
      # - "Clash/v1.18.0"
      # - "mihomo/1.18.3"
      # Accept:
      # - 'application/vnd.github.v3.raw'
      # Authorization:
      # - 'token 1231231'
    health-check:
      enable: true
      interval: 600
      # lazy: true
      url: https://www.gstatic.com/generate_204
      # expected-status: 204 # 当健康检查返回状态码与期望值不符时，认为节点不可用
    override: # 覆写节点加载时的一些配置项
      skip-cert-verify: true
      # udp: true
      # down: "50 Mbps"
      # up: "10 Mbps"
      # dialer-proxy: proxy
      # interface-name: tailscale0
      # routing-mark: 233
      # ip-version: ipv4-prefer
      additional-prefix: "[cordcloud]"
      # additional-suffix: "test"
      # # 名字替换，支持正则表达式
      # proxy-name:
      #   - pattern: "test"
      #     target: "TEST"
      #   - pattern: "IPLC-(.*?)倍"
      #     target: "iplc x $1"

rule-providers:
  Apple:
    behavior: classical # domain ipcidr
    interval: 259200
    path: rules/Apple.yaml # 默认只允许存储在 mihomo 的 Home Dir，如果想存储到任意位置，添加环境变量 SKIP_SAFE_PATH_CHECK=1
    type: http # http 的 path 可空置，默认储存路径为 homedir 的 rules 文件夹，文件名为 url 的 md5
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Apple.yaml"
    proxy: DIRECT
    # size-limit: 10240 # 限制下载文件最大为10kb，默认为0即不限制文件大小

  LocalAreaNetwork:
    behavior: classical
    interval: 259200
    path: rules/LocalAreaNetwork.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/LocalAreaNetwork.yaml"

  UnBan:
    behavior: classical
    interval: 259200
    path: rules/UnBan.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/UnBan.yaml"

  BanAD:
    behavior: classical
    interval: 259200
    path: rules/BanAD.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanAD.yaml"

  BanProgramAD:
    behavior: classical
    interval: 259200
    path: rules/BanProgramAD.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanProgramAD.yaml"

  BanEasyList:
    behavior: classical
    interval: 259200
    path: rules/BanEasyList.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanEasyList.yaml"


  BanEasyListChina:
    behavior: classical
    interval: 259200
    path: rules/BanEasyListChina.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanEasyListChina.yaml"

  BanEasyPrivacy:
    behavior: classical
    interval: 259200
    path: rules/BanEasyPrivacy.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanEasyPrivacy.yaml"

  GoogleFCM:
    behavior: classical
    interval: 259200
    path: rules/GoogleFCM.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/GoogleFCM.yaml"

  GoogleCN:
    behavior: classical
    interval: 259200
    path: rules/GoogleCN.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/GoogleCN.yaml"

  Microsoft:
    behavior: classical
    interval: 259200
    path: rules/Microsoft.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Microsoft.yaml"

  OpenAi:
    behavior: classical
    interval: 259200
    path: rules/OpenAi.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/OpenAi.yaml"

  Netflix:
    behavior: classical
    interval: 259200
    path: rules/Netflix.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Netflix.yaml"

  ChinaMedia:
    behavior: classical
    interval: 259200
    path: rules/ChinaMedia.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaMedia.yaml"

  ProxyMedia:
    behavior: classical
    interval: 259200
    path: rules/ProxyMedia.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyMedia.yaml"

  ProxyGFWlist:
    behavior: classical
    interval: 259200
    path: rules/ProxyGFWlist.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyGFWlist.yaml"

  ChinaIp:
    behavior: ipcidr
    interval: 259200
    path: rules/ChinaIp.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaIp.yaml"

  ChinaDomain:
    behavior: classical
    interval: 259200
    path: rules/ChinaDomain.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaDomain.yaml"

  ChinaCompanyIp:
    behavior: ipcidr
    interval: 259200
    path: rules/ChinaCompanyIp.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaCompanyIp.yaml"

  Download:
    behavior: classical
    interval: 259200
    path: rules/Download.yaml
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Download.yaml"

  BTPT:
    behavior: classical
    interval: 259200
    path: rules/BTPT.yaml
    type: http
    url: "https://raw.githubusercontent.com/lostars/clash-custom-rules/main/BTPT.yaml"

  JPSites:
    behavior: classical
    interval: 259200
    path: rules/JPSites.yaml
    type: http
    url: "https://raw.githubusercontent.com/lostars/clash-custom-rules/main/JPSites.yaml"

rules:
  # 自己维护的规则优先

  - DOMAIN,🚀 节点选择
  - RULE-SET,BTPT,🧲 BT&PT
  - RULE-SET,JPSites,🇯🇵 日本节点
  - RULE-SET,LocalAreaNetwork,🎯 全球直连
  - RULE-SET,UnBan,🎯 全球直连
  - RULE-SET,BanAD,🛑 广告拦截
  - RULE-SET,BanProgramAD,🍃 应用净化
  - RULE-SET,BanEasyList,🆎 AdBlock
  - RULE-SET,BanEasyListChina,🆎 AdBlock
  - RULE-SET,BanEasyPrivacy,🛡️ 隐私防护
  - RULE-SET,GoogleFCM,📢 谷歌FCM
  - RULE-SET,GoogleCN,🎯 全球直连
  - RULE-SET,Microsoft,Ⓜ️ 微软服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,OpenAi,💬 OpenAi
  - RULE-SET,Netflix,🎥 奈飞视频
  - RULE-SET,ChinaMedia,🌏 国内媒体
  - RULE-SET,ProxyMedia,🌍 国外媒体
  - RULE-SET,ProxyGFWlist,🚀 节点选择
  # - RULE-SET,ChinaIp,🎯 全球直连
  - RULE-SET,ChinaDomain,🎯 全球直连
  - RULE-SET,ChinaCompanyIp,🎯 全球直连
  - RULE-SET,Download,🎯 全球直连
  - GEOIP,CN,🎯 全球直连
  - MATCH,🐟 漏网之鱼

